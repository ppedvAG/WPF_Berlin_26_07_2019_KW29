<Window x:Class="Validierung.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Validierung"
        mc:Ignorable="d"
        Title="MainWindow" Height="572.449" Width="369.679">

    <Window.Resources>
        <!--ErrorTemplates sind ControlTemplates, welche das Elemenet im Falle einer verletzten ValidationRule anzeigt-->
        <ControlTemplate x:Key="CtpErrorTextbox">
            <StackPanel>
                <Border BorderBrush="Red" BorderThickness="3">
                    <!--AdornedElementPlaceholder sind Platzhalterelemente für das ürsprüngliche Element in
                        ErrorTemplates-->
                    <AdornedElementPlaceholder x:Name="Aep"/>
                </Border>
                <TextBlock Foreground="Red"
                           Text="{Binding ElementName=Aep, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>

    <Window.DataContext>
        <local:Person/>
    </Window.DataContext>

    <StackPanel Margin="20">
        <TextBox x:Name="TbxIpInput" Validation.ErrorTemplate="{StaticResource CtpErrorTextbox}">
            <TextBox.Text>
                <Binding ElementName="TblIpOutput" Path="Text" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <!--ValidationRules definieren, wann eine Eingabe durch den Benutzer eine zulässige Eingabe ist und
                        geben das Ergebnis dieser Prüfung an die GUI zurück. Im False-Fall wird gegebenenfalls ein ErrorTemplate
                        angezeigt. ValidationsRules werden als C#-Klasse abgelegt.-->
                        <local:Ipv4Validierung/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBlock x:Name="TblIpOutput"/>

        <!--Mit der Property ValidatesOnExceptions können vom CodeBehind geworfene Exceptions als ValidierungsFall von der GUI aufgefangen werden-->
         <TextBox x:Name="TbxName" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                 Validation.ErrorTemplate="{StaticResource CtpErrorTextbox}"/>

        <!--Mit der Property ValidatesOnDataErrors können durch bestimmte Interfaces direkt in der Datenklasse ValidierungsFälle definiert werden-->
        <TextBox x:Name="TbxAlter" Text="{Binding Alter, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Validation.ErrorTemplate="{StaticResource CtpErrorTextbox}"/>
    </StackPanel>
</Window>
